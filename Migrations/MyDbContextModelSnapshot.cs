// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kazariobranco_backend.Database;

#nullable disable

namespace kazariobranco_backend.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("kazariobranco_backend.Models.ContactModel", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("char(11)")
                        .HasColumnName("id");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("date")
                        .HasColumnName("created_at");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("email");

                    b.Property<bool?>("ended")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("name");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasColumnType("char(11)")
                        .HasColumnName("reason");

                    b.HasKey("id")
                        .HasName("pk_contact_id");

                    b.ToTable("contacts", (string)null);
                });

            modelBuilder.Entity("kazariobranco_backend.Models.UserModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<byte[]>("cpf")
                        .IsRequired()
                        .HasColumnType("varbinary(32)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("date")
                        .HasColumnName("created_at");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("email");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("firstname");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("lastname");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("varchar(32)")
                        .HasColumnName("password");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("varchar(32)")
                        .HasColumnName("phone");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("date")
                        .HasColumnName("updated_at");

                    b.HasKey("id")
                        .HasName("pk_user_id");

                    b.HasIndex("cpf")
                        .IsUnique();

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("phone")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
